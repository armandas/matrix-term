use rand::prelude::SliceRandom;
use rand::rngs::ThreadRng;

const CHARS: &[&str; 294] = &[
    "ァ", "ア", "ィ", "イ", "ゥ", "ウ", "ェ", "エ", "ォ", "オ", "カ", "ガ", "キ", "ギ", "ク", "グ",
    "ケ", "ゲ", "コ", "ゴ", "サ", "ザ", "シ", "ジ", "ス", "ズ", "セ", "ゼ", "ソ", "ゾ", "タ", "ダ",
    "チ", "ヂ", "ッ", "ツ", "ヅ", "テ", "デ", "ト", "ド", "ナ", "ニ", "ヌ", "ネ", "ノ", "ハ", "バ",
    "パ", "ヒ", "ビ", "ピ", "フ", "ブ", "プ", "ヘ", "ベ", "ペ", "ホ", "ボ", "ポ", "マ", "ミ", "ム",
    "メ", "モ", "ャ", "ヤ", "ュ", "ユ", "ョ", "ヨ", "ラ", "リ", "ル", "レ", "ロ", "ヮ", "ワ", "ヰ",
    "ヱ", "ヲ", "ン", "ヴ", "ヵ", "ヶ", "ぁ", "あ", "ぃ", "い", "ぅ", "う", "ぇ", "え", "ぉ", "お",
    "か", "が", "き", "ぎ", "く", "ぐ", "け", "げ", "こ", "ご", "さ", "ざ", "し", "じ", "す", "ず",
    "せ", "ぜ", "そ", "ぞ", "た", "だ", "ち", "ぢ", "っ", "つ", "づ", "て", "で", "と", "ど", "な",
    "に", "ぬ", "ね", "の", "は", "ば", "ぱ", "ひ", "び", "ぴ", "ふ", "ぶ", "ぷ", "へ", "べ", "ぺ",
    "ほ", "ぼ", "ぽ", "ま", "み", "む", "め", "も", "ゃ", "や", "ゅ", "ゆ", "ょ", "よ", "ら", "り",
    "る", "れ", "ろ", "ゎ", "わ", "ゐ", "ゑ", "を", "ん", "ゔ", "ゕ", "ゖ", "ゝ", "ゞ", "ㄶ", "ㄷ",
    "ㄹ", "ㄺ", "ㄻ", "ㄼ", "ㄽ", "ㄾ", "ㄿ", "ㅀ", "ㅁ", "ㅂ", "ㅄ", "ㅅ", "ㅆ", "ㅇ", "ㅈ", "ㅊ",
    "ㅋ", "ㅌ", "ㅍ", "ㅎ", "A ", "Ą ", "B ", "C ", "Č ", "D ", "E ", "Ę ", "Ė ", "F ", "G ", "H ",
    "I ", "Į ", "Y ", "J ", "K ", "L ", "M ", "N ", "O ", "P ", "R ", "S ", "Š ", "T ", "U ", "Ų ",
    "Ū ", "V ", "Z ", "Ž ", "a ", "ą ", "b ", "c ", "č ", "d ", "e ", "ę ", "ė ", "f ", "g ", "h ",
    "i ", "į ", "y ", "j ", "k ", "l ", "m ", "n ", "o ", "p ", "r ", "s ", "š ", "t ", "u ", "ų ",
    "ū ", "v ", "z ", "ž ", "0 ", "1 ", "2 ", "3 ", "4 ", "5 ", "6 ", "7 ", "8 ", "9 ", "! ", "@ ",
    "# ", "$ ", "% ", "^ ", "& ", "* ", "( ", ") ", "_ ", "+ ", "{ ", "} ", "[ ", "] ", ": ", "; ",
    "< ", "> ", ", ", ". ", "/ ", "? ",
];

#[derive(Clone, Copy, Debug)]
pub struct Cell {
    pub content: &'static str,
    pub age: u16,
}

impl Cell {
    pub fn new(rng: &mut ThreadRng) -> Self {
        Self {
            content: CHARS.choose(rng).unwrap(),
            age: 0,
        }
    }
}
